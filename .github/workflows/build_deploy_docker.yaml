name: "[STAGING] Build/Push Pre-Release"

on:
  workflow_dispatch:
    inputs:
      FORCE:
        description: 'FORCE REBUILD'
        required: true
        default: false
        type: boolean
  # repository_dispatch:
  #   types: [generate_prerelease]
  workflow_run:
    workflows: ['\[STAGING\] Pre-Release']
    types:
      - completed

env: 
  IMAGE_REPO: m4dm4rtig4n
  IMAGE_NAME: myelectricaldata

jobs:

  informations:
    runs-on: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ env.IMAGE_REPO }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Generate release version
        id: informations
        env:
          FORCE: ${{ inputs.FORCE }}
        run: |
          version=$(cat src/__version__.py |grep VERSION| awk '{print $3}' | tr -d '"')
          echo "version=${version}" >> "$GITHUB_OUTPUT"          
          if [ $FORCE == 'true' ]; then
            echo "build=true" >> "$GITHUB_OUTPUT"    
          else
            if [ $(docker manifest inspect ${IMAGE_REPO}/${IMAGE_NAME}:${version}  > /dev/null ; echo $?) -eq 0 ]; then
              echo "Image already build => SKIP BUILDING"          
              echo "build=false" >> "$GITHUB_OUTPUT"
            else
              echo "build=true" >> "$GITHUB_OUTPUT"    
            fi
          fi
          echo "IMAGE_REPO=${IMAGE_REPO}" >> "$GITHUB_OUTPUT"
          echo "IMAGE_NAME=${IMAGE_NAME}" >> "$GITHUB_OUTPUT"
    outputs:
      version: ${{ steps.informations.outputs.version }}
      build: ${{ steps.informations.outputs.build }}
      IMAGE_REPO: ${{ steps.informations.outputs.IMAGE_REPO }}
      IMAGE_NAME: ${{ steps.informations.outputs.IMAGE_NAME }}

  # Discord-Begin:
  #   needs: [informations]
  #   if: ${{ needs.informations.outputs.build  == 'true' }}
  #   uses: MyElectricalData/.github/.github/workflows/discord.yaml@main
  #   with:
  #     MESSAGE: '**MyElectricalData** : Version **${{ needs.informations.outputs.version }}** is in building state...'
  #   secrets:
  #     DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}

  Build-And-Push-Image:
    needs: [informations]
#    needs: [informations]
    if: ${{ needs.informations.outputs.build  == 'true' }}
    uses: MyElectricalData/.github/.github/workflows/dockerhub-build-push.yaml@main
    with:
      IMAGE_REPO: ${{ needs.informations.outputs.IMAGE_REPO }}
      IMAGE_NAME: ${{ needs.informations.outputs.IMAGE_NAME }}
      PUSH: true
      TAG: ${{ needs.informations.outputs.version }}
      LATEST: false
      BUILD_ARGS: |
        BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
        BUILD_REF=$(git rev-parse --short HEAD)
        BUILD_VERSION=${{ needs.informations.outputs.version }}
    secrets:
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  Discord-Finish:
    needs: [informations, Build-And-Push-Image]
    if: ${{ needs.informations.outputs.build  == 'true' }}
    uses: MyElectricalData/.github/.github/workflows/discord.yaml@main
    with:
      MESSAGE: '**MyElectricalData** : New version available **${{ needs.informations.outputs.version }}**'
    secrets:
      DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
